
name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d
        
  secret-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 
        
      - run: |
          mkdir -p logs/
          echo 'app/' > logs/exclude.txt
      
      
      - uses: max/secret-scan@master
        with:
          exclude_path: 'logs/exclude.txt'
  
  sca:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2   
      
      - run: |
          mkdir -p logs/

      - name: Safety
        run: |
         pip install safety
         safety check -r app/web/requirements.txt > logs/result.txt

      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/result.txt   
          

      - name: Pyraider
        run: |
          pip install pyraider
          pyraider check -f app/web/requirements.txt
          
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/result.json 
  
  test:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build Image for testing
        run: docker-compose -f docker-compose.yml up --build -d 
        
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
        
      
          
  sast:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 
        
      - run: |
          mkdir -p logs/      
      
      - uses: jpetrucciani/bandit-check@master
        with:
          path: '.'
          bandit_flags: '-lll -o logs/output.json -f json'
    
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/output.json


  container-scan:
   needs: [test, sast]
   runs-on: ubuntu-latest
 
   steps:
     - name: Run Dockle
       uses: erzz/dockle-action@v1.1.1
       with:
         image: sristisravan/tic4302-demo
         report-format: json
         report-name: dockle-report
        
     - name: Upload Report
       uses: actions/upload-artifact@v2
       if: always()
       with:
         name: Dockle Report
         path: dockle-report.json
 

  
  deploy:
    needs: [container-scan]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./app/web/
          file: ./app/web/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: sristisravan/tic4302-demo:latest

  dast:
   needs: [deploy]
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v2
    
     - name: Build Image for testing
       run: docker-compose -f docker-compose.yml up --build -d
 
     - name: ZAP Scan
       uses: zaproxy/action-baseline@v0.6.1
       with:
         token: ${{ secrets.GITHUB_TOKEN }}
         docker_name: 'owasp/zap2docker-stable'
         target: 'http://localhost:5000'
         cmd_options: '-a'     

         

  
  